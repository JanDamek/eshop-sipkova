<?php

/**
 * BaseSlozeni
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $slozeni_id
 * @property string $name
 * @property string $title
 * @property clob $perex
 * @property string $perex_img
 * @property string $img
 * @property clob $popis
 * @property boolean $enabled
 * @property string $keywords
 * @property string $description
 * @property Doctrine_Collection $Zbozi
 * 
 * @method integer             getSlozeniId()   Returns the current record's "slozeni_id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method clob                getPerex()       Returns the current record's "perex" value
 * @method string              getPerexImg()    Returns the current record's "perex_img" value
 * @method string              getImg()         Returns the current record's "img" value
 * @method clob                getPopis()       Returns the current record's "popis" value
 * @method boolean             getEnabled()     Returns the current record's "enabled" value
 * @method string              getKeywords()    Returns the current record's "keywords" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getZbozi()       Returns the current record's "Zbozi" collection
 * @method Slozeni             setSlozeniId()   Sets the current record's "slozeni_id" value
 * @method Slozeni             setName()        Sets the current record's "name" value
 * @method Slozeni             setTitle()       Sets the current record's "title" value
 * @method Slozeni             setPerex()       Sets the current record's "perex" value
 * @method Slozeni             setPerexImg()    Sets the current record's "perex_img" value
 * @method Slozeni             setImg()         Sets the current record's "img" value
 * @method Slozeni             setPopis()       Sets the current record's "popis" value
 * @method Slozeni             setEnabled()     Sets the current record's "enabled" value
 * @method Slozeni             setKeywords()    Sets the current record's "keywords" value
 * @method Slozeni             setDescription() Sets the current record's "description" value
 * @method Slozeni             setZbozi()       Sets the current record's "Zbozi" collection
 * 
 * @package    E Shop
 * @subpackage model
 * @author     Jan Damek, damekjan74@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSlozeni extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('slozeni');
        $this->hasColumn('slozeni_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('perex', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('perex_img', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('img', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('popis', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('enabled', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Zbozi', array(
             'refClass' => 'SlozeniZbozi',
             'local' => 'zbozi_id',
             'foreign' => 'slozeni_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}