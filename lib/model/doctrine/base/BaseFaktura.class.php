<?php

/**
 * BaseFaktura
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $faktura_obj_id
 * @property enum $stav
 * @property float $sleva
 * @property float $celkem_dopl
 * @property float $celkem
 * @property integer $mena_id
 * @property integer $zakaznik_id
 * @property integer $objednavka_id
 * @property integer $doprava_id
 * @property integer $platba_id
 * @property integer $pobocka_id
 * @property date $splatnost
 * @property FakturaObj $FakturaObj
 * @property Mena $Mena
 * @property Zakaznik $Zakaznik
 * @property Doprava $Doprava
 * @property Platba $Platba
 * @property PobockyDoprava $PobockyDoprava
 * @property Doctrine_Collection $Polozky
 * @property Doctrine_Collection $Objednavky
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getFakturaObjId()   Returns the current record's "faktura_obj_id" value
 * @method enum                getStav()           Returns the current record's "stav" value
 * @method float               getSleva()          Returns the current record's "sleva" value
 * @method float               getCelkemDopl()     Returns the current record's "celkem_dopl" value
 * @method float               getCelkem()         Returns the current record's "celkem" value
 * @method integer             getMenaId()         Returns the current record's "mena_id" value
 * @method integer             getZakaznikId()     Returns the current record's "zakaznik_id" value
 * @method integer             getObjednavkaId()   Returns the current record's "objednavka_id" value
 * @method integer             getDopravaId()      Returns the current record's "doprava_id" value
 * @method integer             getPlatbaId()       Returns the current record's "platba_id" value
 * @method integer             getPobockaId()      Returns the current record's "pobocka_id" value
 * @method date                getSplatnost()      Returns the current record's "splatnost" value
 * @method FakturaObj          getFakturaObj()     Returns the current record's "FakturaObj" value
 * @method Mena                getMena()           Returns the current record's "Mena" value
 * @method Zakaznik            getZakaznik()       Returns the current record's "Zakaznik" value
 * @method Doprava             getDoprava()        Returns the current record's "Doprava" value
 * @method Platba              getPlatba()         Returns the current record's "Platba" value
 * @method PobockyDoprava      getPobockyDoprava() Returns the current record's "PobockyDoprava" value
 * @method Doctrine_Collection getPolozky()        Returns the current record's "Polozky" collection
 * @method Doctrine_Collection getObjednavky()     Returns the current record's "Objednavky" collection
 * @method Faktura             setId()             Sets the current record's "id" value
 * @method Faktura             setFakturaObjId()   Sets the current record's "faktura_obj_id" value
 * @method Faktura             setStav()           Sets the current record's "stav" value
 * @method Faktura             setSleva()          Sets the current record's "sleva" value
 * @method Faktura             setCelkemDopl()     Sets the current record's "celkem_dopl" value
 * @method Faktura             setCelkem()         Sets the current record's "celkem" value
 * @method Faktura             setMenaId()         Sets the current record's "mena_id" value
 * @method Faktura             setZakaznikId()     Sets the current record's "zakaznik_id" value
 * @method Faktura             setObjednavkaId()   Sets the current record's "objednavka_id" value
 * @method Faktura             setDopravaId()      Sets the current record's "doprava_id" value
 * @method Faktura             setPlatbaId()       Sets the current record's "platba_id" value
 * @method Faktura             setPobockaId()      Sets the current record's "pobocka_id" value
 * @method Faktura             setSplatnost()      Sets the current record's "splatnost" value
 * @method Faktura             setFakturaObj()     Sets the current record's "FakturaObj" value
 * @method Faktura             setMena()           Sets the current record's "Mena" value
 * @method Faktura             setZakaznik()       Sets the current record's "Zakaznik" value
 * @method Faktura             setDoprava()        Sets the current record's "Doprava" value
 * @method Faktura             setPlatba()         Sets the current record's "Platba" value
 * @method Faktura             setPobockyDoprava() Sets the current record's "PobockyDoprava" value
 * @method Faktura             setPolozky()        Sets the current record's "Polozky" collection
 * @method Faktura             setObjednavky()     Sets the current record's "Objednavky" collection
 * 
 * @package    E Shop
 * @subpackage model
 * @author     Jan Damek, damekjan74@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFaktura extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('faktura');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('faktura_obj_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('stav', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Vystaveno',
              1 => 'Splatno',
              2 => 'Proplaceno',
              3 => 'StornovÃ¡no',
             ),
             ));
        $this->hasColumn('sleva', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('celkem_dopl', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('celkem', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('mena_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('zakaznik_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('objednavka_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('doprava_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('platba_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('pobocka_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('splatnost', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FakturaObj', array(
             'local' => 'faktura_obj_id',
             'foreign' => 'id'));

        $this->hasOne('Mena', array(
             'local' => 'mena_id',
             'foreign' => 'id'));

        $this->hasOne('Zakaznik', array(
             'local' => 'zakaznik_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Doprava', array(
             'local' => 'doprava_id',
             'foreign' => 'doprava_id'));

        $this->hasOne('Platba', array(
             'local' => 'platba_id',
             'foreign' => 'id'));

        $this->hasOne('PobockyDoprava', array(
             'local' => 'pobocka_id',
             'foreign' => 'pobocka_id'));

        $this->hasMany('PolozkyFak as Polozky', array(
             'local' => 'id',
             'foreign' => 'faktura_id'));

        $this->hasMany('Objednavky', array(
             'local' => 'id',
             'foreign' => 'faktura_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'id',
             ),
             'canUpdate' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}