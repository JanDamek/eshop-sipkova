<?php

/**
 * BaseDoprava
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $doprava_id
 * @property string $name
 * @property integer $zeme_urceni_id
 * @property integer $mena_id
 * @property string $title
 * @property float $celkem
 * @property float $cena
 * @property ZemeUrceni $ZemeUrceni
 * @property Mena $Mena
 * @property Doctrine_Collection $PobockyDoprava
 * @property Doctrine_Collection $Platba
 * @property Doctrine_Collection $Objednavky
 * @property Doctrine_Collection $Platby
 * 
 * @method integer             getDopravaId()      Returns the current record's "doprava_id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method integer             getZemeUrceniId()   Returns the current record's "zeme_urceni_id" value
 * @method integer             getMenaId()         Returns the current record's "mena_id" value
 * @method string              getTitle()          Returns the current record's "title" value
 * @method float               getCelkem()         Returns the current record's "celkem" value
 * @method float               getCena()           Returns the current record's "cena" value
 * @method ZemeUrceni          getZemeUrceni()     Returns the current record's "ZemeUrceni" value
 * @method Mena                getMena()           Returns the current record's "Mena" value
 * @method Doctrine_Collection getPobockyDoprava() Returns the current record's "PobockyDoprava" collection
 * @method Doctrine_Collection getPlatba()         Returns the current record's "Platba" collection
 * @method Doctrine_Collection getObjednavky()     Returns the current record's "Objednavky" collection
 * @method Doctrine_Collection getPlatby()         Returns the current record's "Platby" collection
 * @method Doprava             setDopravaId()      Sets the current record's "doprava_id" value
 * @method Doprava             setName()           Sets the current record's "name" value
 * @method Doprava             setZemeUrceniId()   Sets the current record's "zeme_urceni_id" value
 * @method Doprava             setMenaId()         Sets the current record's "mena_id" value
 * @method Doprava             setTitle()          Sets the current record's "title" value
 * @method Doprava             setCelkem()         Sets the current record's "celkem" value
 * @method Doprava             setCena()           Sets the current record's "cena" value
 * @method Doprava             setZemeUrceni()     Sets the current record's "ZemeUrceni" value
 * @method Doprava             setMena()           Sets the current record's "Mena" value
 * @method Doprava             setPobockyDoprava() Sets the current record's "PobockyDoprava" collection
 * @method Doprava             setPlatba()         Sets the current record's "Platba" collection
 * @method Doprava             setObjednavky()     Sets the current record's "Objednavky" collection
 * @method Doprava             setPlatby()         Sets the current record's "Platby" collection
 * 
 * @package    E Shop
 * @subpackage model
 * @author     Jan Damek, damekjan74@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDoprava extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('doprava');
        $this->hasColumn('doprava_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('zeme_urceni_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('mena_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('celkem', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('cena', 'float', null, array(
             'type' => 'float',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ZemeUrceni', array(
             'local' => 'zeme_urceni_id',
             'foreign' => 'id'));

        $this->hasOne('Mena', array(
             'local' => 'mena_id',
             'foreign' => 'id'));

        $this->hasMany('PobockyDoprava', array(
             'refClass' => 'DopravaPobocka',
             'local' => 'doprava_id',
             'foreign' => 'pobocka_id'));

        $this->hasMany('Platba', array(
             'local' => 'doprava_id',
             'foreign' => 'doprava_id'));

        $this->hasMany('Objednavky', array(
             'local' => 'doprava_id',
             'foreign' => 'doprava_id'));

        $this->hasMany('Platby', array(
             'local' => 'doprava_id',
             'foreign' => 'doprava_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}