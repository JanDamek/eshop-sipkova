<?php

/**
 * BaseDodavatel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $mena_id
 * @property string $jmeno
 * @property string $prijmeni
 * @property string $organizace
 * @property string $ulice
 * @property string $psc
 * @property string $mesto
 * @property string $ico
 * @property Mena $Mena
 * @property Doctrine_Collection $Zbozi
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method integer             getMenaId()     Returns the current record's "mena_id" value
 * @method string              getJmeno()      Returns the current record's "jmeno" value
 * @method string              getPrijmeni()   Returns the current record's "prijmeni" value
 * @method string              getOrganizace() Returns the current record's "organizace" value
 * @method string              getUlice()      Returns the current record's "ulice" value
 * @method string              getPsc()        Returns the current record's "psc" value
 * @method string              getMesto()      Returns the current record's "mesto" value
 * @method string              getIco()        Returns the current record's "ico" value
 * @method Mena                getMena()       Returns the current record's "Mena" value
 * @method Doctrine_Collection getZbozi()      Returns the current record's "Zbozi" collection
 * @method Dodavatel           setId()         Sets the current record's "id" value
 * @method Dodavatel           setMenaId()     Sets the current record's "mena_id" value
 * @method Dodavatel           setJmeno()      Sets the current record's "jmeno" value
 * @method Dodavatel           setPrijmeni()   Sets the current record's "prijmeni" value
 * @method Dodavatel           setOrganizace() Sets the current record's "organizace" value
 * @method Dodavatel           setUlice()      Sets the current record's "ulice" value
 * @method Dodavatel           setPsc()        Sets the current record's "psc" value
 * @method Dodavatel           setMesto()      Sets the current record's "mesto" value
 * @method Dodavatel           setIco()        Sets the current record's "ico" value
 * @method Dodavatel           setMena()       Sets the current record's "Mena" value
 * @method Dodavatel           setZbozi()      Sets the current record's "Zbozi" collection
 * 
 * @package    E Shop
 * @subpackage model
 * @author     Jan Damek, damekjan74@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDodavatel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dodavatel');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('mena_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('jmeno', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('prijmeni', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('organizace', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('ulice', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('psc', 'string', 6, array(
             'type' => 'string',
             'length' => 6,
             ));
        $this->hasColumn('mesto', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('ico', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Mena', array(
             'local' => 'mena_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Zbozi', array(
             'local' => 'id',
             'foreign' => 'dodavatel_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'organizace',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}